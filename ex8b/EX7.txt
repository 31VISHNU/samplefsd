EXERCISE-7
---------------------------------------------
1)Marklist
<!DOCTYPE html>

<html>
    <head>
        <title>Mark Table</title>
        <script crossorigin src="https://unpkg.com/react@16/umd/react.development.js"></script>
        <script crossorigin src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
        <script>

            function load() {

                    var mark=[]
                    var name=[]

                    for(var i =0;i<5;i++)
                    {
                        j=i+1
                        name[i] = window.prompt("Enter The Name Of "+j+" Student") 
                        mark[i] = window.prompt("Enter The Mark Of "+j+" Student");
                    }

                    const table = React.createElement("div", {},
                    React.createElement("h2",{},"Students Mark Table"),
                    React.createElement("form",{},
                    React.createElement("table",{style : {borderRadius:"5px",padding:"10px",border:"1px solid black",cellSpacing:"10"}},
                    React.createElement("tr",{},
                    React.createElement("th",{},"Roll Number"),
                    React.createElement("th",{},"Name"),
                    React.createElement("th",{},"Total Marks"),
                    React.createElement("th",{},"Percentage")),
                    React.createElement("tr",{},
                    React.createElement("td",{},"20BAD035"),
                    React.createElement("td",{},name[0]),
                    React.createElement("td",{},mark[0]),
                    React.createElement("td",{},mark[0]/700)),
                    React.createElement("tr",{},
                    React.createElement("td",{},"20BAD034"),
                    React.createElement("td",{},name[1]),
                    React.createElement("td",{},mark[1]),
                    React.createElement("td",{},mark[1]/700)),
                    React.createElement("tr",{},
                    React.createElement("td",{},"20BAD045"),
                    React.createElement("td",{},name[2]),
                    React.createElement("td",{},mark[2]),
                    React.createElement("td",{},mark[2]/700)),
                    React.createElement("tr",{},
                    React.createElement("td",{},"20BAD030"),
                    React.createElement("td",{},name[3]),
                    React.createElement("td",{},mark[3]),
                    React.createElement("td",{},mark[3]/700)),
                    React.createElement("tr",{},
                    React.createElement("td",{},"20BAD036"),
                    React.createElement("td",{},name[4]),
                    React.createElement("td",{},mark[4]),
                    React.createElement("td",{},mark[4]/700))))
                );

                ReactDOM.render(table, document.getElementById("body"));
            }
        </script>
    </head>
    <body id="body" onload="load()" style="background-color: beige;">
    </body>
</html>
----------------------------------------------------------------------------
2)TODO LIST
import React from "react";
import "./App.css";
import { Button, Card, Form } from 'react-bootstrap';
//import 'bootstrap/dist/css/bootstrap.min.css';


function Todo({ todo, index, markTodo, removeTodo }) {
  return (
    <div
      className="todo"
      
    >
      <span style={{ textDecoration: todo.isDone ? "line-through" : "" }}>{todo.text}</span>
      <div>

        <Button variant="primary" onClick={() => markTodo(index)}>✓</Button>{' '}
        <Button variant="outline-danger" onClick={() => removeTodo(index)}>✕</Button>
      </div>
    </div>
  );
}

function FormTodo({ addTodo }) {
  const [value, setValue] = React.useState("");

  const handleSubmit = e => {
    e.preventDefault();
    if (!value) return;
    addTodo(value);
    setValue("");
  };

  return (
    <Form onSubmit={handleSubmit}> 
    <Form.Group>
      <Form.Label><b>Add Todo</b></Form.Label>
      <Form.Control type="text" className="input" value={value} onChange={e => setValue(e.target.value)} placeholder="Add new todo" />
    </Form.Group>
    <Button variant="primary mb-3" type="submit">
      Submit
    </Button>
  </Form>
  );
}

function App() {
  const [todos, setTodos] = React.useState([ ]);

  const addTodo = text => {
    const newTodos = [...todos, { text }];
    setTodos(newTodos);
  };

  const markTodo = index => {
    const newTodos = [...todos];
    newTodos[index].isDone = true;
    setTodos(newTodos);
  };

  const removeTodo = index => {
    const newTodos = [...todos];
    newTodos.splice(index, 1);
    setTodos(newTodos);
  };

  return (
    <div className="app">
      <div className="container">
        <h1 className="text-center mb-4">Todo List</h1>
        <FormTodo addTodo={addTodo} />
        <div>
          {todos.map((todo, index) => (
            <Card>
              <Card.Body>
                <Todo
                key={index}
                index={index}
                todo={todo}
                markTodo={markTodo}
                removeTodo={removeTodo}
                />
              </Card.Body>
            </Card>
          ))}
        </div>
      </div>
    </div>
  );
}

export default App;
--------------------------------------------------------------------
3)WEATHER
-------------------------------------------------------------------
import React, { useState } from 'react'
import axios from 'axios'
// axios-->used to call and access the openweather API

function App() {
  const [data, setData] = useState({})
  const [location, setLocation] = useState('')
  // usestate-->keeps track the data changes in it 



  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=imperial&appid=895284fb2d2c50a520ea537456963d9c`

  const searchLocation = (event) => {
    if (event.key === 'Enter') {
      axios.get(url).then((response) => {
        setData(response.data)  
        console.log(response.data)
      })
      setLocation('')
    }
  }

  return (
    <div className="app">
      <div className="search">
        <input
          value={location}
          onChange={event => setLocation(event.target.value)}
          onKeyPress={searchLocation}
          placeholder='Enter Location'
          type="text" />
      </div>
      <div className="container">
        <div className="top">
          <div className="location">
            <p>{data.name}</p>
          </div>
          <div className="temp">
            {data.main ? <h1>{data.main.temp.toFixed()}°F</h1> : null}
          </div>
          <div className="description">
            {data.weather ? <p>{data.weather[0].main}</p> : null}
          </div>
        </div>

        {data.name !== undefined &&
          <div className="bottom">
            <div className="feels">
              {data.main ? <p className='bold'>{data.main.feels_like.toFixed()}°F</p> : null}
              <p>Feels Like</p>
            </div>
            <div className="humidity">
              {data.main ? <p className='bold'>{data.main.humidity}%</p> : null}
              <p>Humidity</p>
            </div>
            <div className="wind">
              {data.wind ? <p className='bold'>{data.wind.speed.toFixed()} MPH</p> : null}
              <p>Wind Speed</p>
            </div>
          </div>
        }



      </div>
    </div>
  );
}
// https://api.openweathermap.org/data/2.5/weather?q=America&appid=895284fb2d2c50a520ea537456963d9c
export default App;
-----------------------------------------------------------------------------------------
